name: Release
on:
  push:
    branches:
      - master
      - main
      
  workflow_dispatch:
    inputs:
      bump:
        description: bump rule (major|minor|patch|premajor|preminor|prepatch|prerelease)
        default: prerelease
        required: false
        
      version:
        description: manual version
        default: ''
        required: false
        
      sdk_version:
        description: manual sdk version
        default: ''
        required: false
        
      release:
        description: release type (local|global)
        default: local
        required: false

# Secrets:
#   DOCKERHUB_USERNAME - also used as the dockerhub repository url
#   DOCKERHUB_PASSWORD
#   HYDRO_SERVING_TOKEN - github token with write access to hydro-serving repo

env:
  HYDRO_SERVING_REPO: ${{ github.repository_owner }}/hydro-serving
  IMAGE: hydro-stat # name of the built image
  REGISTRY: hydrosphere
  VERSION: ${{ github.event.inputs.version }}
  SDK_VERSION: ${{ github.event.inputs.sdk_version }}
  
jobs:
  Verify_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get latest tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1

    outputs:
      latest_version: ${{ steps.get-latest-tag.outputs.tag }}

  Build_and_publish:
    needs: Verify_version
    if: >
      needs.Verify_version.outputs.latest_version != ${{ env.VERSION }} && (
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'push')
    runs-on: ubuntu-latest

    steps:
      - name: Validate inputs  #TODO create an action for this
        if: github.event_name == 'workflow_dispatch'
        run: |
          case ${{ github.event.inputs.bump }} in
            major)
              ;;
            premajor)
              ;;
            minor)
              ;;
            preminor)
              ;;
            patch)
              ;;
            prepatch)
              ;;
            prerelease)
              ;;
            *)
              echo "invalid bump rule: ${{ github.event.inputs.bump }}"
              exit 1
              ;;
          esac
          
          case ${{ github.event.inputs.release }} in 
            local)
              ;;
            global)
              ;;
            *)
              echo invalid release type: ${{ github.event.inputs.release }}
              exit 1
              ;;
          esac
          
          echo BUMP=${{ github.event.inputs.bump }} >> $GITHUB_ENV
          echo RELEASE=${{ github.event.inputs.release }} >> $GITHUB_ENV
          echo VERSION=${{ github.event.inputs.version }} >> $GITHUB_ENV
          echo SDK_VERSION=${{ github.event.inputs.sdk_version }} >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
          
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.1.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Bump version  
      - name: Bump sdk
        if: env.SDK_VERSION == '' && env.RELEASE == 'local'
        run: |
          SDK_VERSION=$(curl -Ls https://pypi.org/pypi/hydrosdk/json | jq -r '.releases | keys[]' | sort -V | tail -n 1)
          echo $SDK_VERSION
        #  poetry add hydrosdk=$SDK_VERSION
          
      - name: Bump sdk to latest stable version
        if: env.SDK_VERSION == '' && env.RELEASE == 'global'
        run: |
          SDK_VERSION=$(curl -Ls https://pypi.org/pypi/hydrosdk/json | jq -r .info.version)
          echo $SDK_VERSION
          poetry add hydrosdk=$SDK_VERSION
          
      - name: Set manual sdk version
        if: env.SDK_VERSION != ''
        run: poetry add hydrosdk=${{ github.event.inputs.sdk_version }}

      # Bump service version  
      - name: Get latest tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get-latest-tag.outputs.tag }}
          version-fragment: ${{ github.event.inputs.bump }}
      
      # Set version variable
      - name: Set VERSION variable
        if: env.VERSION == '' && github.event_name == 'workflow_dispatch'
        run: echo VERSION=${{ steps.bump_version.outputs.next-version }} >> $GITHUB_ENV
        
      - name: Set VERSION variable
        if: env.VERSION != '' && github.event_name == 'workflow_dispatch'
        run: echo VERSION=${{ env.VERSION }} >> $GITHUB_ENV

      - name: Set VERSION variable
        if: github.event_name == 'push'
        run: echo VERSION=${{ github.sha }} >> $GITHUB_ENV

      # Bump version
      - name: Bump service version
        if: github.event_name == 'workflow_dispatch'
        run: poetry version ${{ env.VERSION }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.VERSION }}
          build-args: |
            GIT_HEAD_COMMIT=${{ github.sha }}
            GIT_CURRENT_BRANCH=${{ github.ref }}
        
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} 
        
      - name: Update image version in hydro-serving repo
        if: github.event_name == 'push'
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        with:
          workflow: Local release
          token: ${{ secrets.HYDRO_SERVING_TOKEN }}
          repo: ${{ env.HYDRO_SERVING_REPO }}
          inputs: '{"service_image_name":"${{ env.IMAGE }}", "registry_url":"${{ env.REGISTRY }}", "tag":"${{ env.VERSION }}"}'

      - name: Commit new version
        if: github.event_name == 'workflow_dispatch'
        run: "echo ${{ env.VERSION }} > version"

      - name: Push to repo
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Releasing ${{ env.IMAGE }}:${{ env.VERSION }}" -a
          git push
           
      - name: Reports
        id: generate-output
        run: echo "::set-output name=tag-output::${{ env.VERSION }}"

      - name: Create github release
        if: github.event_name == 'workflow_dispatch'
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.VERSION }}

    outputs:
      tag: ${{ steps.generate-output.outputs.tag-output }}
      sdk_version: ${{ env.SDK_VERSION }}
