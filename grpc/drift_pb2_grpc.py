# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import drift_pb2 as drift__pb2


class DriftDetectorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.hello = channel.unary_unary(
        '/userpb.DriftDetectorService/hello',
        request_serializer=drift__pb2.HelloRequest.SerializeToString,
        response_deserializer=drift__pb2.HelloResponse.FromString,
        )
    self.deployInfo = channel.unary_unary(
        '/userpb.DriftDetectorService/deployInfo',
        request_serializer=drift__pb2.DeployInfoRequest.SerializeToString,
        response_deserializer=drift__pb2.DeployInfoResponse.FromString,
        )
    self.metrics = channel.unary_unary(
        '/userpb.DriftDetectorService/metrics',
        request_serializer=drift__pb2.MetricsRequest.SerializeToString,
        response_deserializer=drift__pb2.MetricsResponse.FromString,
        )


class DriftDetectorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def hello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deployInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def metrics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DriftDetectorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'hello': grpc.unary_unary_rpc_method_handler(
          servicer.hello,
          request_deserializer=drift__pb2.HelloRequest.FromString,
          response_serializer=drift__pb2.HelloResponse.SerializeToString,
      ),
      'deployInfo': grpc.unary_unary_rpc_method_handler(
          servicer.deployInfo,
          request_deserializer=drift__pb2.DeployInfoRequest.FromString,
          response_serializer=drift__pb2.DeployInfoResponse.SerializeToString,
      ),
      'metrics': grpc.unary_unary_rpc_method_handler(
          servicer.metrics,
          request_deserializer=drift__pb2.MetricsRequest.FromString,
          response_serializer=drift__pb2.MetricsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'userpb.DriftDetectorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
